#include<bits/stdc++.h>

#define FOG(x,y,z) for(register int x=y,x##_=z;x<=x##_;++x)
#define DOG(x,y,z) for(register int x=y,x##_=z;x>=x##_;--x)
#define FOR(x,y,z) for(int x=y,x##_=z;x<=x##_;++x)
#define DOR(x,y,z) for(int x=y,x##_=z;x>=x##_;--x)
#define FOR_(x,y,z,s) for(int x=y,x##_=z;x<=x##_;x+=s)
#define FOR__(x,y,z) for(int x=y,x##_=z;x<=x##_;x<<=1)
#define EOR(x,y) for(int x##_=head[x],y=edge[x##_].e;x##_;y=edge[x##_=edge[x##_].to].e)
#define EGOR(x,y,z) for(int x##_=head[x],y=edge[x##_].e,z=edge[x##_].c;x##_;y=edge[x##_=edge[x##_].to].e,z=edge[x##_].c)
#define EOD(x,y,z) for(int &x##_=head[x],y=edge[x##_].e,z=edge[x##_].c;x##_;y=edge[x##_=edge[x##_].to].e,z=edge[x##_].c)
#define While(x) for(;x;)
#define clr(x,y) memset(x,y,sizeof(x))
#define szf(x) sizeof(x)
#define min3(x,y,z) min(min(x,y),z)
#define max3(x,y,z) max(max(x,y),z)

#define read2(x,y) read(x),read(y)
#define read3(x,y,z) read(x),read(y),read(z)
#define read4(x,y,z,w) read3(x,y,z),read(w)
#define reads(str) sf("%s",str)

#define ts (*this)
#define sf scanf
#define pf printf

#define ll long long
#define ull unsigned long long
#define db double
#define ct clock_t
#define ck() clock()
#define rd rand()
#define rmx RAND_MAX
#define RD T*(rd*2-rmx)


using namespace std;

template<class T>bool tomin(T &x,T y){return y<x?x=y,1:0;}
template<class T>bool tomax(T &x,T y){return x<y?x=y,1:0;}
template<class T>void read(T &x){
	char c;
	x=0;
	int f=1;
	while(c=getchar(),c<'0'||c>'9')if(c=='-')f=-1;
	do x=(x<<3)+(x<<1)+(c^48);
	while(c=getchar(),c>='0'&&c<='9');
	x*=f;
}
bool mem1;
const db Pi=acos(-1);
const int M=30031;
const int maxn=130;
const int maxm=1<<10|5;
int n,m,K,P;
int Mod(int &x,int y){
	x+=y;
	if(x>=M)x-=M;
}
struct Mat{
	int n,m;
	int a[maxn][maxn];
	Mat(){
		clr(a,0);
	}
	Mat operator *(const Mat &A)const
	{
		Mat res;
		res.n=n;
		res.m=A.m;
		FOR(i,0,res.n-1)FOR(j,0,res.m-1){
			res.a[i][j]=0;
			FOR(k,0,m-1)Mod(res.a[i][j],a[i][k]*A.a[k][j]%M);
		}return res;
	}
	void Print(){
		puts("------------------------");
		FOR(i,0,n-1){
			FOR(j,0,m-1)pf("%d ",a[i][j]);
			puts("");
		}
		puts("------------------------");
	}
}op,dp;
int mp[maxm],sta[maxn];
int sz[maxm];
void Init(){
	op.n=op.m=dp.n=m;
	dp.m=1;
	FOR(i,0,m-1){
		int s=sta[i];
		if(s>>(P-1)&1)op.a[mp[(s^1<<P-1)<<1|1]][i]=1;
		else{
			FOR(j,0,P-1)if(s>>j&1)op.a[mp[(s^1<<j)<<1|1]][i]=1;
			op.a[mp[s<<1]][i]=1;
		}
	}
	// op.Print();
	dp.a[mp[(1<<K)-1]][0]=1;
	// dp.Print();
}
Mat Pow(int s){
	s--;
	Mat res=op;
	while(s){
		if(s&1)res=res*op;
		op=op*op;
		s>>=1;
	}return res;
}
bool mem2;
int main(){
	freopen("bus.in","r",stdin);
	freopen("bus.out","w",stdout);
	srand(time(NULL));
	read3(n,K,P);P--;
	FOR(i,0,(1<<P)-1){
		if(i)sz[i]=sz[i&i-1]+1;
		if(sz[i]==K-1){
			sta[mp[i]=m]=i;
			m++;
		}
	}
	Init();
	// FOR(i,1,n-K){
	// 	dp=op*dp;
	// 	// dp.Print();
	// }
	dp=Pow(n-K)*dp;
	pf("%d",dp.a[mp[(1<<K)-1]][0]);
	return 0;
}
